#LyX 1.5.4 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
% \usepackage{fancyhdr}
% \usepackage{multicol}
% \usepackage{float}
% \usepackage{textcomp}
% \usepackage{alltt}
% \usepackage{times}
% \usepackage{ifpdf}
% \ifpdf
    \usepackage[pdftex,pagebackref=true,colorlinks=true,linkcolor=black,unicode]{hyperref}
% \else
%     \usepackage[ps2pdf,pagebackref=true,colorlinks=true,linkcolor=blue,unicode]{hyperref}
%     \usepackage{pspicture}
% \fi
% \usepackage{doxy/doxygen}
% \makeindex
% \renewcommand{\footrulewidth}{0.4pt}
\end_preamble
\language italian
\inputencoding utf8
\font_roman bookman
\font_sans helvet
\font_typewriter courier
\font_default_family default
\font_sc true
\font_osf true
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\float_placement h
\paperfontsize 12
\spacing double
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine natbib_authoryear
\use_bibtopic false
\paperorientation portrait
\leftmargin 4cm
\topmargin 5cm
\rightmargin 3cm
\bottommargin 5cm
\headheight 3cm
\headsep 3cm
\footskip 3cm
\secnumdepth 5
\tocdepth 1
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle headings
\tracking_changes false
\output_changes true
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Titlehead

\size footnotesize
\begin_inset VSpace -3cm*
\end_inset


\series bold
\size small
\noun on

\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="1">
<features>
<column alignment="center" valignment="top" width="100col%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize
\noun on
Università degli Studi di Bari 
\hfill
 Facoltà di Scienze MM.
 FF.
 NN.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
\size small
\noun on
Corso di Laurea Specialistica in Informatica
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\series default
\size footnotesize

\newline

\noun default

\lyxline

\end_layout

\begin_layout Title

\size footnotesize
\begin_inset VSpace -3cm*
\end_inset


\series medium
\size larger
Tesi di Laurea
\series default
\size tiny

\newline
\InsetSpace ~

\newline

\size default
Principi per un file system configurabile e sua applicazione per dati musicali
\newline

\begin_inset VSpace 2cm*
\end_inset


\end_layout

\begin_layout Author

\size large
\begin_inset Box Frameless
position "b"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "70col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Standard
\paragraph_spacing single
\noindent

\size small
\noun on
Relatori:
\noun default

\newline
Ch.
\begin_inset Formula $^{\text{mo}}$
\end_inset

 Prof.
 Salvatore Caporaso
\newline
Ing.
 Vittoria Cozza
\end_layout

\end_inset

 
\hfill
 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "b"
use_parbox 0
width "30col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Standard
\paragraph_spacing single
\noindent

\size small
\noun on
Laureando:
\noun default

\newline
Dott.
 Vito De Tullio
\end_layout

\end_inset

 
\begin_inset VSpace 2cm*
\end_inset


\end_layout

\begin_layout Date

\lyxline
Anno Accademico 2006/07
\begin_inset VSpace -4cm*
\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 13.5cm*
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Copyright © 2008 Vito De Tullio.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
È permesso copiare, distribuire e/o modificare questo documento seguendo
 i termini della 
\begin_inset Quotes eld
\end_inset

Licenza per documentazione libera GNU
\begin_inset Quotes erd
\end_inset

, versione 1.2 o ogni versione successiva pubblicata dalla Free Software
 Foundation; senza sezioni non modificabili, senza testi di prima di copertina
 e di quarta di copertina.
 Una copia della licenza è inclusa nella sezione intitolata 
\begin_inset Quotes eld
\end_inset

Licenza per la documentazione libera GNU
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard

\newpage

\end_layout

\begin_layout Dedication
\noindent
Ad Anna.
\end_layout

\begin_layout Standard
\begin_inset LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Addchap
Introduzione
\end_layout

\begin_layout Quote
Yoko Kanno/(1998) COWBOY BEBOP - Original Soundtrack 1/01 - Tank!.mp3
\end_layout

\begin_layout Standard
Il lavoro di questa tesi nasce come risposta all'esigenza di catalogare
 ed organizzare collezioni di dimensioni sempre crescenti di file multimediali,
 in maniera veloce, automatica e portabile.
\end_layout

\begin_layout Standard
Un'esigenza del genere, infatti, non è nuova, e infatti tutti i player musicali
 moderni incorporano una qualche forma di 
\begin_inset Quotes eld
\end_inset

gestore della collezione
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Tuttavia questo vincola l'utente a quale player utilizzare.
 Infatti non esiste un formato comune di memorizzazione delle informazioni
 su una collezione di file multimediali, ed ogni player decide autonomamente:
 questo porta a non 
\begin_inset Quotes eld
\end_inset

potersi portare con sè
\begin_inset Quotes erd
\end_inset

, magari su una pentrna USB, la propria collezione di brani preferiti e
 anche la propria organizzazione per questi dati.
\end_layout

\begin_layout Standard
L'idea nata per ovviare a questo problema è stata quella di implementare
 un 
\begin_inset Quotes eld
\end_inset

gestore di collezione
\begin_inset Quotes erd
\end_inset

 ad un livello più basso di quello delle singole applicazioni.
 La soluzione trovata è stata quella di realizzare un file system virtuale,
 avente come 
\begin_inset Quotes eld
\end_inset

sorgente dati
\begin_inset Quotes erd
\end_inset

 la collezione di file multimediali da gestire, e come 
\begin_inset Quotes eld
\end_inset

destinazione
\begin_inset Quotes erd
\end_inset

 un albero delle directory, organizzato secondo i gusti dell'utente.
 Per permettere all'utente di decidere come organizzare la collezione musicale,
 è stato realizzato un semplice linguaggio tramite il quale descrivere i
 nomi delle directory che conterranno i file musicali.
 L'organizzazione sarà implicitamente data appunto dalla gerarchia
\begin_inset Foot
status collapsed

\begin_layout Standard
Subito dopo ogni capitolo di questo testo è presente il nome di un file.
 Questi sono solo esempi 
\emph on
reali
\emph default
 di nomi di file generati tramite il progetto, usando come schema della
 gerarchia la stringa 
\family typewriter

\begin_inset Quotes eld
\end_inset

%autor/(%year) %album/%track - %title.%type
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Durante il lavoro ci si è resi conto, tuttavia, che l'idea era generalizzabile
 a qualunque tipo d'informazione, usando un livello d'astrazione ottenuto
 tramite l'uso di un database.
 La semantica dei dati presenti nel database non è importante ai fini del
 file system, quindi era possibile utilizzare le tabelle sia per inserire
 informazioni sui file multimediali, come è stato fatto in questa tesi,
 ma anche per avere file system per la gestione della posta, per il monitoraggio
 di host remoti, per le foto, per qualunque informazione ragionevolmente
 organizzabile in una tassonomia.
\end_layout

\begin_layout Standard
La parte 
\begin_inset LatexCommand vref
reference "par:File-system-e"

\end_inset

 descrive il file system realizzato, la sua architettura e le librerie usate;
 nella parte 
\begin_inset LatexCommand vref
reference "par:Generalizzazione-della-configurabilità"

\end_inset

, invece, è presente una descrizione del lavoro svolto per dividere il progetto
 in due parti, come compilare e gli sviluppi futuri.
\end_layout

\begin_layout Part
\begin_inset LatexCommand label
name "par:File-system-e"

\end_inset

File system e configurabilità in ambito musicale
\end_layout

\begin_layout Chapter
\begin_inset LatexCommand label
name "cha:File-system-per"

\end_inset

File system per dati musicali
\end_layout

\begin_layout Quote
Elio e le storie tese/(1992) Italyan, rum casusu çikti/12 - Pipppero®.mp3
\end_layout

\begin_layout Standard
Per poter realizzare un file system per dati musicali, è stato necessario
 prima di tutto studiare i formati più comuni e le librerie più adatte a
 manipolarli.
 Una volta fatto questo sarà necessario capire quali sono le informazioni
 che si possono estrarre, e quali, tra queste, risultano utili per i nostri
 fini.
\end_layout

\begin_layout Standard
Per rispondere a queste due ultime domande ci siamo posti nella condizione
 dell'utente che potrà usare il sistema.
 Egli ha una collezione più o meno grande di file musicali, e desidera poterli
 avere ordinati in base a uno o più vincoli, anche contemporaneamente (ad
 esempio può volere da una parte la collezione ordinata per genere, da un'altra
 parte ordinata per anno e artista).
 Al momento usa un qualche player multimediale per organizzarsi e scegliere
 cosa ascoltare, ma ha comprato un palmare e, per quanto voglia ascoltare
 la propria musica anche lì, il suo player non funziona su quella piattaforma,
 dove invece si trova un programma molto più semplice, che permette solamente
 di elencare i file presenti su una directory e di ascoltarli uno alla volta.
\end_layout

\begin_layout Standard
In base a questa piccola 
\emph on
user story
\emph default
 possiamo notare come le informazioni che potranno essere usate dovranno
 essere il minor numero possibile (al massimo una dozzina) e che dovranno
 essere simili ai possibili valori mostrati dai player musicali esistenti.
 Ci aspettiamo quindi che sia possibile 
\emph on
quantomeno
\emph default
 avere informazioni sull'autore del brano, sul titolo, sul suo genere, e
 poco altro.
 Possiamo ragionevolmente aspettarci che qualunque formato di file multimediale
 supporti queste informazioni, riservandoci di espandere questo insieme
 di informazioni in base a quanto verrà descritto nella sezione 
\begin_inset LatexCommand vref
reference "sec:File-multimediali"

\end_inset

.
\end_layout

\begin_layout Section
\begin_inset LatexCommand label
name "sec:File-multimediali"

\end_inset

File multimediali
\end_layout

\begin_layout Subsection
Formati
\end_layout

\begin_layout Standard
Esistono svariati formati per codificare informazioni multimediali sotto
 forma digitale.
 Per ogni formato è necessario, quindi, prevedere un metodo di codifica
 e uno di decodifica di queste informazioni, in genere implementati in un
 programma chiamato codec.
 Esistono decine di codec, uno per ogni formato, a seconda delle necessità
 e possibilità dell'utente.
 È possibile dividere i codec in tre grandi famiglie:
\end_layout

\begin_layout Description
Non\InsetSpace ~
compressi il segnale è campionato e direttamente codificato
\end_layout

\begin_layout Description
Con\InsetSpace ~
compressione\InsetSpace ~
lossy vi è compressione del segnale campionato, con perdita
 d'informazione rispetto all'originale
\end_layout

\begin_layout Description
Con\InsetSpace ~
compressione\InsetSpace ~
lossless vi è compressione del segnale campionato, senza
 perdita d'informazione rispetto all'originale
\end_layout

\begin_layout Standard
I codec che non effettuano compressione, come ad esempio quelli associati
 ai formati AIFF e WAV, sono poco usati, se non in alcuni ambiti (ad esempio
 i cd musicali contengono le tracce codificate in WAV) , per le grandi dimension
i che è necessario avere per il salvataggio del segnale.
 A titolo d'esempio, un minuto di audio, codificato in AIFF, occupa circa
 10MB di dati.
\end_layout

\begin_layout Standard
Per quanto riguarda i codec che effettuano compressione, essa può essere
 con o senza perdita d'informazione: i codec lossy consentodo di ridurre
 lo spazio d'immagazinamento dell'informazione codificata, a scapito di
 
\begin_inset Quotes eld
\end_inset

artefatti
\begin_inset Quotes erd
\end_inset

 -- più o meno riconoscibili -- rispetto all'originale.
 A questa famiglia appartengono alcuni dei formati multimediali più comuni:
 AAC, Dolby Digital, MP3, RealAudio, Vorbis, WMA...
 I motivi sono dettati soprattutto dal rapporto qualità/dimensione: in genere,
 soprattutto per quanto riguarda i segnali sonori, l'orecchio umano non
 allenato non è capace di raccogliere tutte le sfumature musicali.
 In base a questo principio, ad esempio, un codec lossy non salverà le informazi
oni relative a frequenze audio se non presenti in un certo intervallo, o
 rimuoverà certi suoni 
\begin_inset Quotes eld
\end_inset

mascherati
\begin_inset Quotes erd
\end_inset

 da altri più forti.
\end_layout

\begin_layout Standard
Gli ultimi codec, quelli lossless, come ad esempio quelli associati ai formati
 APE, FLAC, WavPack e WMA lossless, utilizzano algoritmi di compressione
 concettualmente simili a quelli utilizzati nei formati zip, bz2, ma ottimizzati
 per il tipo d'informazione: infatti è possibile arrivare circa il doppio
 di compressione rispetto ad un file codificato tramite un codec non compresso
 e poi compresso con un algoritmo generico.
\end_layout

\begin_layout Subsection
Metadati
\end_layout

\begin_layout Standard
Caratteristica comune a quasi tutti i formati audio è la possibilità di
 associare, all'informazione vera e propria codificata, anche informazioni
 addizionali.
 Autore, titolo o anno di registrazione sono solo alcune delle informazioni
 usualmente associate ad un brano audio.
 Inizialmente non si era pensato ad alcun modo per associare metadati all'audio
 codificato, e quindi era necessario utilizzare il nome del file per inserire
 queste informazioni.
 Ma questa soluzione è stata abbandonata, a causa dei limiti intrinseci
 dei nomi dei file (a seconda del sistema operativo e del file system, non
 sarebbe stato possibile avere nomi più lunghi di otto caratteri, o con
 alcuni caratteri particolari -- '/', su piattaforme *NIX; '<', '>', ':',
 '"', '/', '
\backslash
', '|', '?', '*' su FAT e NTFS -- ) e, a livello pratico, dell'impossibilità
 di avere uno standard comune che s'adatti ad ogni utente (alcuni potrebbero
 preferire ordinare i brani per autore, altri per genere, altri ancora inserire
 mark personalizzati).
\end_layout

\begin_layout Standard
Nel 1996 Eric Kemp introdusse, nei file mp3, un primo formato per definire
 metadati: ID3v1.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename imgs/id3v1_blocks.gif
	scale 75
	subcaption
	subcaptionText "ID3v1"

\end_inset

 
\hfill
 
\begin_inset Graphics
	filename imgs/id3v1.1_blocks.gif
	scale 75
	subcaption
	subcaptionText "ID3v1.1"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Formato-ID3v1"

\end_inset

Formato tag ID3v1.x
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Come si può vedere in figura 
\begin_inset LatexCommand vref
reference "fig:Formato-ID3v1"

\end_inset

 e in tabella 
\begin_inset LatexCommand vref
reference "tab:Dimensione-dei-singoli"

\end_inset

, gli ultimi 128 byte del file .mp3 sono riservati per permettere d'associare
 ad un brano informazioni addizionali.
\end_layout

\begin_layout Standard
In particolare, Michael Mutschler, in un momento successivo, decise di utilizzar
e 2 byte dei commenti (in genere il tipo di tag meno utile) per aggiungere
 un'ulteriore informazione.
 Tramite quest'estensione, veniva definito il formato ID3v1.1
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<column alignment="center" valignment="top" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Elemento
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Byte usati
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stringa 
\begin_inset Quotes eld
\end_inset

TAG
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Song Title
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Artist
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Album
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Year
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Comment
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Genre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 
\hfill
 
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Elemento
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Byte usati
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stringa 
\begin_inset Quotes eld
\end_inset

TAG
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Song Title
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Artist
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Album
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Year
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Comment
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
28
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Album track
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Genre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "tab:Dimensione-dei-singoli"

\end_inset

Dimensione dei singoli elementi in un tag ID3v1.x
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In realtà questo formato di tag presenta molti problemi.
 Prima di tutto il fatto che i campi sono fissi e a dimensione fissa: non
 era possibile avere campi più lunghi di 30 bytes, né avere informazioni
 più specifiche, oltre che un generico titolo, compositore e album.
\end_layout

\begin_layout Standard
Inoltre vi erano problemi anche nella definizione del LOCALE dei caratteri:
 ID3v1.x era concepito solo per caratteri codificati in latin1 (ISO-8859-1),
 ma, dati gli evidenti limiti della codifica, ad esempio nel supporto delle
 lingue dell'europa centrale, delle lingue asiatiche ecc, ogni programma
 
\begin_inset Quotes eld
\end_inset

decideva
\begin_inset Quotes erd
\end_inset

 di codificare le informazioni in un qualunque locale; tuttavia non è possibile
 descrivere, nel tag, quale locale si è usato, quindi andando incontro a
 problemi di Mojibake
\begin_inset Foot
status collapsed

\begin_layout Standard
Problemi di rappresentazione di testi codificati con un certo encode, e
 decodificati con un altro encode.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Come risposta venne definito, nel 1998, il formato ID3v2, poi sostituito
 dal formato ID3v2.3.0.
 In questo caso le informazioni sono codificate 
\begin_inset Quotes eld
\end_inset

in testa
\begin_inset Quotes erd
\end_inset

 al file, e i tag sono pensati per essere aggiunti in modo dinamico, ed
 ognuno di tipo e dimensione liberi (è possibile inglobare interi, stringhe,
 e anche blob in un elemento del tag ID3v.2.3.0).
\end_layout

\begin_layout Standard
Esistono, tuttavia, altri formati per la codifica di metadati, anche se
 usati in quantità minore rispetto ai tag ID3: APE tags e Xiph Comments.
 I primi sono nati per associare meta informazioni nei formati audio Monkey's
 Audio e Musepack, i secondi per il container audio ogg.
 In realtà i formati di codifica dei dati e dei metadati sono più o meno
 ortogonali tra loro: in effetti è possibile codificare metadati in formato
 ID3 in file .mp3 e .flac, APE tags in file .mp3, .flac e .mpc, e Xiph Comments
 in file .ogg e .flac.
\end_layout

\begin_layout Standard
Come introdotto nella parte iniziale del capitolo 
\begin_inset LatexCommand vref
reference "cha:File-system-per"

\end_inset

, ci si è riservati di espandere le informazioni che l'utente potrà scegliere
 di usare per mostrare i file presenti nella propria collezione.
\end_layout

\begin_layout Standard
In base a quanto detto, e alla babele di formati di musica e metadati, abbiamo
 deciso di rimanere il più minimalisti possibili, decidendo di lavorare
 al massimo con i tag supportati dal 
\emph on
tutti
\emph default
 i formati di metadati analizzati, 
\emph on
tranne
\emph default
 l'ID3v1(.0), che ci è sembrato troppo limitante sotto questo punto di vista,
 oltre che poco usato.
 Questo coincide grosso modo con le informazioni supportate da ID3v1.1; tuttavia
 abbiamo deciso di non usare le informazioni presenti nel tag 
\begin_inset Quotes eld
\end_inset

Comment
\begin_inset Quotes erd
\end_inset

, in quanto questo è, nella maggioranza dei casi, o vuoto o con informazioni
 inutili (spam).
 Questo riduce le informazioni disponibili per l'utente a sei campi:
\end_layout

\begin_layout Itemize
Titolo
\end_layout

\begin_layout Itemize
Artista
\end_layout

\begin_layout Itemize
Anno
\end_layout

\begin_layout Itemize
Album
\end_layout

\begin_layout Itemize
Numero traccia nell'album
\end_layout

\begin_layout Itemize
Genere
\end_layout

\begin_layout Standard
In aggiunta, ci sembra doveroso aggiungere anche l'informazione sul tipo
 di file analizzato (se ogg, mp3 o altro) e sul nome del file originale.
 In previsione di un espansione del progetto per il funzionamento in rete,
 si è pensato di avere anche host e path completo dei file originali, per
 poter comunque risalire a qual'è il file che si sta ascoltando.
 Sommando tutto quanto, si arriva a dieci campi.
 Non pochissimi, ma comunque perfettamente gestibili da qualunque utente
 per permettergli di esprimere le proprie preferenze.
\end_layout

\begin_layout Section
File system in user space
\end_layout

\begin_layout Subsection
Motivazioni
\end_layout

\begin_layout Standard
Dovendo creare un file system per il sistema operativo linux, ci si è posti
 sin dall'inizio il problema di come implementarlo.
 La dicotomia è data dalla possibilità di lavorare in 
\emph on
kernel space
\emph default
 o in 
\emph on
user space
\emph default
.
 I motivi per scegliere la prima o la seconda soluzione sono vari, a seconda
 delle necessità del progetto.
\end_layout

\begin_layout Standard
Lavorare in kernel space ha una serie di vantaggi, tra i quali, prima di
 tutto, spicca la velocità d'esecuzione: per sviluppare una componente come
 un filesystem, che 
\emph on
deve
\emph default
 dialogare spesso con il kernel, è quasi naturale scegliere lo spazio kernel,
 in quanto vengono eliminati parecchi livelli di passaggi di indirizzi di
 memoria, poiché si utilizza sempre memoria virtuale privilegiata.
 Al contrario, sviluppare un fs in userspace coinvolge una serie di passaggi
 aggiuntivi: ogni volta che si vuole accedere ad un file, si dovrebbe avere
 uno scambio di messaggi tra il kernel e il processo non privilegiato (in
 user space), che dovrebbe eseguire quanto richiesto dal kernel, e poi ritornare
 una risposta, sempre con comunicazioni tra spazi di memoria virtuale distinti.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename imgs/img91.gif
	width 50col%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Virtual file system
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Inoltre in kernel space è già presente un layer d'astrazione che consente
 di facilitare l'aggiunta di nuovi filesystem, usando una API consistente:
 il Virtual File System.
\end_layout

\begin_layout Standard
Tuttavia i punti a vantaggio di un file system in user space sono maggiori.
\end_layout

\begin_layout Standard
Prima di tutto, per quanto le API di VFS siano ottime, sono 
\emph on
molto
\emph default
 a basso livello: VFS presuppone che qualunque nuovo fs venga creato, debba
 essere implementato basandosi su una struttura inode, che esista il concetto
 di superblocco e si implementi, in modo esplicito, una gestione dei buffer
 delle informazioni.
\end_layout

\begin_layout Standard
Inoltre un filesystem sviluppato in kernel space presuppone l'interfacciamento,
 verso il basso, in modo più o meno diretto con l'hardware, cosa che esula
 da questa tesi.
\end_layout

\begin_layout Standard
Come limite finale, lavorare in kernel space implica che non si possano
 usare librerie esterne, quindi non esisterebbe modo semplice per analizzare
 i file multimediali, nè per memorizzare questi meta dati.
\end_layout

\begin_layout Standard
L'alternativa consiste nel lavorare in user space, ma qui si pone un problema
 pratico: è necessario che esista un elemento, in kernel space, che offra
 la possibilità di chiamare un programma in user space! Per fortuna, almeno
 per la creazione dei file system, esistono già soluzioni del genere; in
 particolare si è scelto di usare il file system Fuse
\begin_inset LatexCommand citep
key "fuse_home_page"

\end_inset

 (
\begin_inset Quotes eld
\end_inset

File system in USEr space
\begin_inset Quotes erd
\end_inset

), che consente di implementare un file system in kernel space, ma specificando
 la logica di comportamento in user space.
\end_layout

\begin_layout Subsection
Introduzione a Fuse
\end_layout

\begin_layout Standard
Fuse è una libreria che consente di implementare un file system per linux
 in user space.
 Questo significa che non si è costretti ad agire sul kernel (con conseguenti
 problemi di portabilità da una release del kernel all'altra), ma si utilizza
 una API semplice, tramite la quale, sostanzialmente, si implementa un file
 system con una serie di funzioni di callback, richiamate a seconda delle
 operazioni che il kernel richiede di fare sui file presenti nel file system
 stesso.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename imgs/fuse_structure.png
	width 75col%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Funzionamento-di-FUSE"

\end_inset

Funzionamento di FUSE
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In figura 
\begin_inset LatexCommand vref
reference "fig:Funzionamento-di-FUSE"

\end_inset

 si può vedere un semplice schema di funzionamento di Fuse, che si pone,
 nei confronti del kernel, come un file system 
\begin_inset Quotes eld
\end_inset

classico
\begin_inset Quotes erd
\end_inset

 (ext2, reiserfs, nfs...), ma il cui comportamento è definito in spazio utente.
\end_layout

\begin_layout Standard
Ovviamente questo ha un costo, dal punto di vista computazionale (ad ogni
 operazione occorsa sul file system virtuale è necessario 
\begin_inset Quotes eld
\end_inset

entrare
\begin_inset Quotes erd
\end_inset

 ed 
\begin_inset Quotes eld
\end_inset

uscire
\begin_inset Quotes erd
\end_inset

 dallo spazio kernel, privilegiato), ma il costo è trascurabile, a fronte
 dei vantaggi ottenibili: in questo modo sarà possibile agire come più si
 vuole sulle meta informazioni dei file multimediali, dagli strumenti a
 riga di comando (sed, awk, grep, find su tutti) a interfacce grafiche (il
 classico file browser, come strumenti più complessi).
\end_layout

\begin_layout Standard
Lavorare in user space, inoltre, consente di poter utilizzare anche linguaggi
 diversi dal C.
 In questa tesi si è scelto di continuare con questo linguaggio, ma esistono
 binding di fuse in per C++, Java, C#, Haskell, TLC, Python, Perl e in altri
 linguaggi
\begin_inset Foot
status collapsed

\begin_layout Standard
Personalmente sarei tentato di effettuare il porting del progetto in erlang
\begin_inset LatexCommand citep
key "erlang_home_page"

\end_inset

, usando fuserl
\begin_inset LatexCommand citep
key "fuserl_home_page"

\end_inset

, soprattutto per lo sviluppo della condivisione delle informazioni in rete.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
In particolare l'uso di Fuse nel progetto si ridurrà nella definizione delle
 funzioni di callback da implementare nella struct 
\family typewriter
fuse_operations
\family default
, e nel richiamare il 
\emph on
main loop
\emph default
 di fuse, tramite il codice descritto in figura 
\begin_inset LatexCommand vref
reference "fig:Main-loop-di"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,extendedchars=true,language=C,numbers=left,numberstyle={\tiny},showstringspaces=false,stepnumber=1"
inline false
status open

\begin_layout Standard

char* tmp_argv[] = { argv[0], argv[2] };
\end_layout

\begin_layout Standard

struct fuse_args args = FUSE_ARGS_INIT(2, tmp_argv);
\end_layout

\begin_layout Standard

struct fuse_chan* ch;
\end_layout

\begin_layout Standard

char* mountpoint;
\end_layout

\begin_layout Standard

int err = -1;
\end_layout

\begin_layout Standard

if (fuse_parse_cmdline(&args, &mountpoint, NULL, NULL) != -1 && (ch = fuse_mount
(mountpoint, &args)) != NULL) {
\end_layout

\begin_layout Standard

    struct fuse* se;
\end_layout

\begin_layout Standard

    if ((se = fuse_new(ch, &args, &musicmeshfs_op, sizeof musicmeshfs_op,
 db)) != NULL)
\end_layout

\begin_layout Standard

        err = fuse_loop(se);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard

fuse_unmount(mountpoint, ch);
\end_layout

\begin_layout Standard

fuse_opt_free_args(&args);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Main-loop-di"

\end_inset

Main loop di fuse
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'architettura di Fuse consente, inoltre, di definire anche solo un sottoinsieme
 di tutte le funzioni di callback supportate.
 In particolare, per implementare un file system virtuale in sola lettura
 e minimalista al massimo, sarà sufficiente definire le funzioni di callback
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.getattr
\family default
 funzione di callback invocata quando il kernel richiede informazioni su
 un file (data di creazione, ultima modifica, proprietario, gruppo, il tipo
 di file - se è un file regolare, una directory, un device...
 -)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.read
\family default
 funzione di callback invocata quando il kernel richiede il contenuto del
 file
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.readdir
\family default
 funzione di callback invocata quando il kernel richiede il contenuto di
 una directory (anche della radice del filesystem virtuale)
\end_layout

\begin_layout Standard
Ovviamente un file system del genere non è molto utile, se non come 
\begin_inset Quotes eld
\end_inset

hello world
\begin_inset Quotes erd
\end_inset

 per testare le API di Fuse.
\end_layout

\begin_layout Standard
In effetti, esistono anche altre callback, alcune che svolgono compiti più
 comuni di altre, ma che, in totale, permettono di reimplementare tutte
 le funzionalità che deve offrire ogni file system compatibile con il VFS.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.readlink
\family default
 equivalente di 
\family typewriter
fuse_operations.read
\family default
 per i link simbolici
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.mknod
\family default
 invocata quando si vuole creare un file
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.mkdir
\family default
 invocata quando si vuole creare una directory
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.unlink
\family default
 invocata quando si vuole cancellare un file
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.rmdir
\family default
 invocata quando si vuole cancellare una directory
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.symlink
\family default
 invocata quando si vuole creare un link simbolico
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.rename
\family default
 invocata quando si vuole rinominare un file
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.link
\family default
 invocata quando si vuole creare un hard link per un file
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.chmod
\family default
 invocata quando si vogliono cambiare i permessi di un file
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.chown
\family default
 invocata quando si vogliono cambiare utente e gruppo di appartenenza di
 un file
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.truncate
\family default
 invocata quando si vuole cambiare le dimensioni di un file
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.write
\family default
 invocata quando si vuole scrivere su un file
\end_layout

\begin_layout Standard
Inoltre vi sono alcune funzioni di callback implementate per ottimizzare
 l'esecuzione del codice
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.open
\family default
 invocata quando si vuole aprire un file; se presente, le implementazioni
 di 
\family typewriter
fuse_operations.read
\family default
 / 
\family typewriter
fuse_operations.write
\family default
 possono usare un parametro settato da 
\family typewriter
fuse_operations.open
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.release
\family default
 invocata quando si vuole chiudere un file aperto
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.opendir
\family default
 equivalente di 
\family typewriter
fuse_operations.open
\family default
 per le directory; se presente, l'implementazione di
\family typewriter

\newline
fuse_operations.readdir
\family default
 potrà usare un parametro settato da 
\family typewriter
fuse_operations.opendir
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
fuse_operations.releasedir
\family default
 equivalente di 
\family typewriter
fuse_operations.release
\family default
 per le directory
\end_layout

\begin_layout Standard
Infine vi sono funzioni 
\begin_inset Quotes eld
\end_inset

accessorie
\begin_inset Quotes erd
\end_inset

, pensate per casi particolari, ma usate di rado; esse sono
\family typewriter
fuse_operations.statfs
\family default
, 
\family typewriter
fuse_operations.flush
\family default
, 
\family typewriter
fuse_operations.fsync
\family default
, 
\family typewriter
fuse_operations.setxattr
\family default
,
\family typewriter

\newline
fuse_operations.getxattr
\family default
, 
\family typewriter
fuse_operations.listxattr
\family default
,
\family typewriter

\newline
fuse_operations.removexattr
\family default
, 
\family typewriter
fuse_operations.fsyncdir
\family default
,
\family typewriter

\newline
fuse_operations.init
\family default
,
\family typewriter
 fuse_operations.destroy
\family default
,
\family typewriter

\newline
fuse_operations.access
\family default
, 
\family typewriter
fuse_operations.create
\family default
,
\family typewriter

\newline
fuse_operations.ftruncate
\family default
, 
\family typewriter
fuse_operations.fgetattr
\family default
,
\family typewriter

\newline
fuse_operations.lock
\family default
,
\family typewriter
 fuse_operations.utimens
\family default
 e
\family typewriter

\newline
fuse_operations.bmap
\family default
.
\end_layout

\begin_layout Chapter
Analisi delle librerie e API usate
\end_layout

\begin_layout Quote
Francesco De Gregori/(1997) La valigia dell'attore/18 - Niente da capire.mp3
\end_layout

\begin_layout Standard
Il progetto utilizza la libreria FUSE, già descritta nel capitolo, per permetter
e la creazione di un file system in spazio utente.
\end_layout

\begin_layout Standard
Per garantire la sincronizzazione tra i dati fisici e le informazioni organizzat
e all'interno di musicmeshfs, si usa inotify; per la memorizzazione e il
 trovamento efficiente dei dati si usa sqlite3; infine per l'analisi dei
 tag musicali si usa la libreria Taglib, che appare essere quella che supporta
 il maggior numero di formati (mp3, ogg, flac...) e di standard (id3v1.x, id3v2.x,
 Vorbis comment...).
\end_layout

\begin_layout Section
Inotify
\end_layout

\begin_layout Standard
Inotify è un'altra componente del kernel che è stata utilizzata nel progetto.
 Essa è una API del kernel linux (inclusa ufficialmente dal rilascio 2.6.13,
 disponibile sotto forma di patch per le versioni precedenti
\begin_inset LatexCommand citep
key "robert_love_inotify"

\end_inset

) che rende molto semplice monitorare i cambiamenti effettuati su file e
 directory.
 In ogni istante, infatti, è possibile sapere se uno o più file 
\begin_inset Quotes eld
\end_inset

monitorati
\begin_inset Quotes erd
\end_inset

 sono stati letti, scritti, spostati, cancellati...
\end_layout

\begin_layout Standard
Le informazioni sono codificate in uno stream, permettendo, quindi, una
 programmazione ad eventi.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,extendedchars=true,language=C,numbers=left,numberstyle={\tiny},showstringspaces=false,stepnumber=1"
inline false
status collapsed

\begin_layout Standard

void local_loop(sqlite3* db, inotify_t inotify,
\end_layout

\begin_layout Standard

        int(*callback)(struct inotify_event*, sqlite3*, inotify_t)) {
\end_layout

\begin_layout Standard

    char queue[MAX_BUFFER_LEN];
\end_layout

\begin_layout Standard

    while (1) {
\end_layout

\begin_layout Standard

        ssize_t readed = read(inotify.instance, queue, MAX_BUFFER_LEN);
\end_layout

\begin_layout Standard

        if (readed == -1) {
\end_layout

\begin_layout Standard

            perror("read");
\end_layout

\begin_layout Standard

            exit(EXIT_FAILURE);
\end_layout

\begin_layout Standard

        }
\end_layout

\begin_layout Standard

        for (int i=0; i<readed;) {
\end_layout

\begin_layout Standard

            struct inotify_event* event = (struct inotify_event*) &queue[i];
\end_layout

\begin_layout Standard

            if (callback && callback(event, db, inotify) == -1)
\end_layout

\begin_layout Standard

                break;
\end_layout

\begin_layout Standard

            i += sizeof(struct inotify_event)+event->len;
\end_layout

\begin_layout Standard

        }
\end_layout

\begin_layout Standard

    }
\end_layout

\begin_layout Standard

    rm_all_watches(inotify);
\end_layout

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Loop-principale-di-inotify"

\end_inset

Loop principale di monitoraggio dei file tramite inotify
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In figura 
\begin_inset LatexCommand vref
reference "fig:Loop-principale-di-inotify"

\end_inset

 è presente il codice usato per monitorare i cambiamenti ai file presenti
 nel database.
 Come si può vedere il codice è totalmente astratto, e la logica da applicare
 è esterna al loop stesso, in quanto implementata come funzione di callback.
\begin_inset Note Shaded
status open

\begin_layout Standard
TODO: INSERIRE FUNZIONE CALLBACK!
\newline

\newline

\newline

\newline

\end_layout

\end_inset


\end_layout

\begin_layout Section
Sqlite3
\end_layout

\begin_layout Standard
Sqlite è una libreria scritta in C, relativamente piccola, che offre la
 possibilità di creare e gestire un database relazionali.
 Un intero database è salvato sotto forma di file, e l'accesso alle funzionalità
 sul database ottenute tramite chiamate a funzione.
\end_layout

\begin_layout Standard
Per quanto leggero e minimalista, sqlite offre quasi tutte le features dello
 standard SQL-92, includendo transazioni Atomiche, Isolate e Durevoli, oltre
 che i trigger.
 Purtroppo non è supportata l'integrità referenziale tra chiavi esterne,
 quindi non è soddisfatta la richiesta di Consistenza per avere un dbms
 ACID-compliant.
 In compenso i già citati triggers consentono di 
\begin_inset Quotes eld
\end_inset

simulare
\begin_inset Quotes erd
\end_inset

 l'integrità referenziale.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,extendedchars=true,language=SQL,numbers=left,numberstyle={\tiny},showstringspaces=false,stepnumber=1"
inline false
status open

\begin_layout Standard

-- Se creo una chiave esterna, deve esistere il valore referenziato
\end_layout

\begin_layout Standard

CREATE TRIGGER IF NOT EXISTS fk_musica_artista_insert BEFORE INSERT ON musica
\end_layout

\begin_layout Standard

FOR EACH ROW BEGIN
\end_layout

\begin_layout Standard

    SELECT RAISE(ABORT, 'fk_musica_artista_insert')
\end_layout

\begin_layout Standard

    WHERE (SELECT nome_artista FROM artista WHERE (NEW.artista_nome_artista
 IS
\end_layout

\begin_layout Standard

            NULL OR nome_artista = NEW.artista_nome_artista)) IS NULL;
\end_layout

\begin_layout Standard

END;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Esempio-di-trigger"

\end_inset

Esempio di trigger
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ad esempio, in figura 
\begin_inset LatexCommand vref
reference "fig:Esempio-di-trigger"

\end_inset

 è presente un trigger (preso dallo schema del database sviluppato per il
 progetto) che solleva un errore se è inserita una chiave esterna che non
 fa riferimento a nessun elemento effettivamente presente).
\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
TODO: continuare e finire
\end_layout

\end_inset


\end_layout

\begin_layout Section
TagLib
\end_layout

\begin_layout Standard
TagLib
\begin_inset LatexCommand citep
key "taglib_home_page"

\end_inset

 è una libreria per leggere e modificare i meta dati dei formati audio più
 usati.
 Al momento (aprile 2008, versione 1.5) supporta i tag ID3v1.x e ID3v2.x per
 i file .mp3, gli Ogg Vorbis comments e i tag ID3 tags per i Vorbis comments
 per i file flac, mpc, speex, wavpack e trueaudio.
\end_layout

\begin_layout Standard
TagLib è distribuita tramite due licenze: la GNU Lesser General Public License
 (LGPL) e la Mozilla Public License (MPL).
\end_layout

\begin_layout Standard
TagLib nasce come libreria in C++, ma offre un set di bindings per vari
 linguaggi, incluso il C.
 In particolare, l'interfaccia di TagLib per il C è ridotta ad una API semplice
 e astratta: se in C++ esistono classi specializzate per ogni formato di
 tag, in C esistono 
\emph on
solo
\emph default
 api generiche.
\end_layout

\begin_layout Standard
In realtà questo, nel nostro caso, è più un vantaggio che un limite, in
 quanto questa 
\emph on
façade
\emph default
 offre solo funzioni necessarie, e lo studio della libreria è stato questione
 di minuti.
\end_layout

\begin_layout Standard
In particolare, le funzioni offerte da TagLib, poi usate, sono state le
 seguenti:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,extendedchars=true,language=C,numbers=left,numberstyle={\tiny},showstringspaces=false,stepnumber=1"
inline false
status open

\begin_layout Standard

int add_local_file_in_db(void* db, char* path) {
\end_layout

\begin_layout Standard

    TagLib_File* tlf = taglib_file_new(path);
\end_layout

\begin_layout Standard

    if (tlf) {
\end_layout

\begin_layout Standard

        TagLib_Tag* tlt = taglib_file_tag(tlf);
\end_layout

\begin_layout Standard

        char* titolo = preprocessing(taglib_tag_title(tlt));
\end_layout

\begin_layout Standard

        char* artista = preprocessing(taglib_tag_artist(tlt));
\end_layout

\begin_layout Standard

        char* album = preprocessing(taglib_tag_album(tlt));
\end_layout

\begin_layout Standard

        char* genere = preprocessing(taglib_tag_genre(tlt));
\end_layout

\begin_layout Standard

        unsigned int anno = taglib_tag_year(tlt);
\end_layout

\begin_layout Standard

        unsigned int traccia = taglib_tag_track(tlt);
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

/* OMISSIS */
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

        taglib_tag_free_strings();
\end_layout

\begin_layout Standard

    }
\end_layout

\begin_layout Standard

    taglib_file_free(tlf);
\end_layout

\begin_layout Standard

    return 0;
\end_layout

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Estrazione-delle-meta"

\end_inset

Estrazione delle meta informazioni da un file multimediale
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La figura 
\begin_inset LatexCommand vref
reference "fig:Estrazione-delle-meta"

\end_inset

 mostra uno scorcio della funzione che aggiunge informazioni da un file
 locale nel database.
 Per semplicità è stato omesso il codice di inserimento vero e proprio,
 in quanto si voleva mostrare semplicemente la facilità con la quale è stato
 possibile estrarre le meta informazioni dai file multimediali.
\end_layout

\begin_layout Subsection
Id3lib
\end_layout

\begin_layout Standard
In principio era stata presa in considerazione un'altra libreria per l'estrazion
e e la manipolazione di meta dati, id3lib
\begin_inset LatexCommand citep
key "id3lib_home_page"

\end_inset

, pensata sin dall'inizio per essere usata in programmi scritti in C.
 Tuttavia essa è stata scartata a causa di vari problemi:
\end_layout

\begin_layout Itemize
Prima di tutto supporta 
\emph on
solo
\emph default
 i tag ID3v1.x e ID3v2.x e 
\emph on
solo
\emph default
 su file .mp3.
 Non sono supportati né i Vorbis comment, né gli APE tags né gli stessi
 tag ID3 in file flac, trueaudio, ecc...
\end_layout

\begin_layout Itemize
Le API, per quanto più ampie di quelle di TagLib, erano molto più a basso
 livello.
 In particolare, in presenza di tag ID3v2.x sarebbe stato necessario controllare
 esplicitamente i frame ID3 presenti nel file multimediale; e per ognuno
 di essi, una volta scelti i frame 
\emph on
rilevanti
\emph default
 (in 
\begin_inset LatexCommand citep
key "id3v2.4_frames"

\end_inset

 vi sono, ad esempio, quattro frame 
\begin_inset Quotes eld
\end_inset

nativi
\begin_inset Quotes erd
\end_inset

 per la definizione del titolo del brano - TIT1, 
\family typewriter
TIT2
\family default
, 
\family typewriter
TIT3
\family default
 e 
\family typewriter
TOAL
\family default
 - e quasi una dozzina di frame che possono definire l'artista del brano.
 Queto avrebbe comportato da una parte la scelta di quali usare effettivamente,
 ed in secondo luogo, l'uso di fallback in caso di frame non presenti)
\end_layout

\begin_layout Itemize
Un ultimo problema riguarda la codifica delle stringhe delle informazioni:
 id3lib, infatti, gestisce in modo quantomeno 
\begin_inset Quotes eld
\end_inset

curioso
\begin_inset Quotes erd
\end_inset

 stringhe non codificate in latin1: in primo luogo non è possibile discriminare
 se la stringa è effettivamente in latin1 o codificata in altro modo; inoltre
 l'alternativa consiste nel lavorare con array di 
\family typewriter
unicode
\family default
_t, typedef di interi a 16 bit, ognuno dei quali rappresenta il codice del
 carattere codificato in UTF16.
 Da questo array, tuttavia, non è stata offerta alcuna funzione per trasformarlo
 in un char* con codifica a piacere.
 Questo avrebbe portato a dover implementare a mano tale funzione di conversione
 per poter lavorare con ID3 con stringhe contenenti, ad esempio, caratteri
 giapponesi, russi o medio-orientali.
\end_layout

\begin_layout Chapter
Il file system configurabile Musicmeshfs
\end_layout

\begin_layout Quote
Franco Battiato/(1971) Fetus/05 - Fenomenologia.ogg
\end_layout

\begin_layout Standard
L'architettura del sistema è modulare e formata da due componenti indipendenti
 tra loro:
\end_layout

\begin_layout Description
musicmeshfsd processo incaricato di assicurare la consistenza tra i dati
 reali (le informazioni presenti nei file e nelle directory monitorate)
 e il database interno; nello specifico, dovrà monitorare direttamente i
 file locali, ed è estendibile per comunicare con le istanze di musicmeshfsd
 degli altri host per i file remoti.
\end_layout

\begin_layout Description
musicmeshfsc processo incaricato di mostrare le informazioni interne come
 tree di un file system in base ad uno schema definito dall'utente.
 Questo tree sarà popolato in base alle informazioni interne 
\begin_inset Quotes eld
\end_inset

manutenute
\begin_inset Quotes erd
\end_inset

 da musicmeshfsd.
\end_layout

\begin_layout Standard
In particolare, nel progetto è stato deciso di implementare le due componenti
 come due eseguibili separati: la scelta è stata data dalla possibilità
 di avere, contemporaneamente, più istanze di musicmeshfsc (e quindi più
 tree) ognuno con un ordinameno diverso degli stessi dati.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename imgs/Architettura.eps
	width 100col%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Architettura del progetto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
dopo aver anaLIZZATO dATI MUSICALI ci siamo resi conto che lo stesso discorso
 può esser fatto x qualsiasi cosa ke continee METADATI!!!
\end_layout

\begin_layout Standard
file, filezippati,cartelle cliniche, email, 4
\end_layout

\begin_layout Standard
qquesta cosa è facile xuso db
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In effetti l'uso di un database per la gestione delle informazioni ha messo
 in luce come il sistema poteva essere facilmente reso più generale: non
 solo file multimediali, ma qualunque collezione d'oggetti contenenti metadati
 poteva fungere da 
\begin_inset Quotes eld
\end_inset

sorgente
\begin_inset Quotes erd
\end_inset

 per questo file system.
\end_layout

\begin_layout Standard
Riuscire ad astrarre dai file musicali e lavorare solamente con i campi
 (testuali) di tabelle di un database è stata una cosa complicata, e sulla
 quale il lavoro non è certo terminato, ma permette di riutilizzare gran
 parte del codice già scritto, per implementare virtual file system per
 organizzare email, cartelle cliniche, o anche file compressi, o qualunque
 altra cosa.
\end_layout

\begin_layout Section
Creazione del database
\end_layout

\begin_layout Standard
La fase di monitoraggio ha lo scopo di aggiornare dinamicamente le informazioni
 sui file 
\begin_inset Quotes eld
\end_inset

reali
\begin_inset Quotes erd
\end_inset

 che si vuole usare per popolare il filesystem 
\begin_inset Quotes eld
\end_inset

virtuale
\begin_inset Quotes erd
\end_inset

.
 Tuttavia, nella primissima fase, subito dopo l'instanziazione del programma
 vero e proprio, e fatti i dovuti controlli sui parametri esterni, è necessaria
 una fase 
\begin_inset Quotes eld
\end_inset

una tantum
\begin_inset Quotes erd
\end_inset

 di creazione del database (se non è stato scelto di usarne uno già creato
 e inizializzato) e di aggiunta di tutti i file e le directory, ricorsivamente,
 decisi dall'utente.
\end_layout

\begin_layout Standard
Per far questo sono stati implementati due funzioni: la prima ha il compito
 di creare il database usando uno schema SQL appropriato.
 Nel nostro progetto, per poter meglio separare il codice C da quello SQL
 in fase di stesura del codice, è stato predisposto un pre-processore ad
 hoc, sostituisci.py, mostrata in figura 
\begin_inset LatexCommand vref
reference "fig:sostituisci.py"

\end_inset

, con il compito di sostituire una stringa contenente una 
\begin_inset Quotes eld
\end_inset

parola chiave
\begin_inset Quotes erd
\end_inset

 in un file .c (nello specifico 
\begin_inset Quotes eld
\end_inset

TRANSLATE_ME_PLEASE
\begin_inset Quotes erd
\end_inset

) con un'altra stringa contenente il codice SQL desiderato.
 Nonostante l'uso di un linguaggio ad altissimo livello, il codice è abbastanza
 complicato; questo per ovviare ad alcune limitazioni del linguaggio C:
 in particolare il limite per le stringhe allocate sullo stack (del tipo
 char stringa[] = 
\begin_inset Quotes eld
\end_inset

...stringa più lunga di 4095 caratteri...
\begin_inset Quotes erd
\end_inset

); per far questo la variabile è stata allocata sullo heap, dividendo il
 contenuto del file iniziale in 
\begin_inset Quotes eld
\end_inset

chunks
\begin_inset Quotes erd
\end_inset

 e usando calloc per preparare la memoria che ospiterà la concatenazione
 di questi 
\begin_inset Quotes eld
\end_inset

chunks
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,extendedchars=true,language=Python,numbers=left,numberstyle={\tiny},showstringspaces=false,stepnumber=1"
inline false
status open

\begin_layout Standard

#!/usr/bin/env python
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

mark = '"TRANSLATE_ME_PLEASE"'
\end_layout

\begin_layout Standard

varname = "schema"
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

def chunks(string, size=4096):
\end_layout

\begin_layout Standard

    if not size:
\end_layout

\begin_layout Standard

        raise ValueError("size cannot be zero")
\end_layout

\begin_layout Standard

    l = len(string)
\end_layout

\begin_layout Standard

    i = 0
\end_layout

\begin_layout Standard

    ret = []
\end_layout

\begin_layout Standard

    while i < l:
\end_layout

\begin_layout Standard

        ret.append(string[i:i+size])
\end_layout

\begin_layout Standard

        i += size
\end_layout

\begin_layout Standard

    return ret
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

def flat(couples):
\end_layout

\begin_layout Standard

    r = []
\end_layout

\begin_layout Standard

    for a,b in couples:
\end_layout

\begin_layout Standard

        r.append(a)
\end_layout

\begin_layout Standard

        r.append(b)
\end_layout

\begin_layout Standard

    return tuple(r)
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

if __name__ == '__main__':
\end_layout

\begin_layout Standard

    from sys import argv
\end_layout

\begin_layout Standard

    in_, out = open(argv[1], "r"), open(argv[2], "w")
\end_layout

\begin_layout Standard

    query_str = open(argv[3], "r").read()
\end_layout

\begin_layout Standard

    for line in in_:
\end_layout

\begin_layout Standard

        out.write(line.replace(mark, 'calloc(%d, 1); 
\backslash
nstrcat(%s, "' % (len(query_str)+1, varname) + '");
\backslash
nstrcat(%s+%d, "'.join(s.replace("
\backslash
n", "
\backslash

\backslash
n
\backslash

\backslash

\backslash
n").replace("
\backslash
"", "
\backslash

\backslash

\backslash
"") for s in chunks(query_str, 4000)) % flat((varname, i) for i in xrange(4000,
 len(query_str), 4000)) + '")'))
\end_layout

\begin_layout Standard

    out.close()
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:sostituisci.py"

\end_inset

sostituisci.py
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La seconda funzione implementata, invece, è possibile vederla in figura
\newline

 
\begin_inset LatexCommand vref
reference "fig:Inizializzazione-del-db"

\end_inset

: il suo compito è quello di popolare il database , e, per far ciò, per
 ogni parametro specificato dall'utente, applica la funzione walk(...), che
 
\begin_inset Quotes eld
\end_inset

percorre
\begin_inset Quotes erd
\end_inset

 l'albero con radice nel parametro e se incontra un file, lo analizza e
 - se supportato - lo aggiunge al database; se incontra una directory, l'aggiung
e al 
\emph on
pool
\emph default
 di directories monitorate tramite inotify, per poi entrare nella directory
 stessa e applicare sè stesso ricorsivamente.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,extendedchars=true,language=C,numbers=left,numberstyle={\tiny},showstringspaces=false,stepnumber=1"
inline false
status open

\begin_layout Standard

int init_db_and_inotify(dynamic_str_t params, sqlite3* db, inotify_t* inotify)
 {
\end_layout

\begin_layout Standard

    for (int i=0; i<params.size; i++)
\end_layout

\begin_layout Standard

        if (walk(params.buf[i], add_local_file_in_db, db, add_watch, inotify))
\end_layout

\begin_layout Standard

            return -1;
\end_layout

\begin_layout Standard

    return 0;
\end_layout

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Inizializzazione-del-db"

\end_inset

Inizializzazione del db
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
TODO: Rivedere e finire!
\end_layout

\end_inset


\end_layout

\begin_layout Section
Sincronizzazione dei dati ad eventi
\end_layout

\begin_layout Standard
La figura 
\begin_inset LatexCommand vref
reference "fig:Loop-principale-di-inotify"

\end_inset

 descrive come viene utilizzato inotify per monitorare ed agire in base
 agli eventi accorsi: vi è un ciclo infinito il cui compito è leggere da
 un oggetto 
\begin_inset Quotes eld
\end_inset

file-like
\begin_inset Quotes erd
\end_inset

 (infatti si usa la classica read) uno stream di eventi.
 In effetti ogni evento ha dimensione variabile, in quanto porta con sé
 anche un payload aggiuntivo.
 Tuttavia nell'evento stesso è presente un campo (event->len) che indica
 quanto è grande l'informazione a dimensione variabile.
 In questo modo, grazie ad un ciclo più interno, è possibile rilevare ogni
 singolo evento riconosciuto da inotify.
 Nella fattispecie, la funzione local_loop ha, come terzo parametro, una
 funzione di callback da richiamare proprio in occasione di un evento.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,extendedchars=true,language=C,numbers=left,numberstyle={\tiny},showstringspaces=false,stepnumber=1"
inline false
status open

\begin_layout Standard

int local_event_callback(struct inotify_event* event, sqlite3* db, inotify_t
 inotify) {
\end_layout

\begin_layout Standard

    if (event->mask & IN_ISDIR) {    // se è una directory
\end_layout

\begin_layout Standard

        if (event->mask & (IN_CREATE | IN_MOVED_TO))    // creata o spostata
 in
\end_layout

\begin_layout Standard

            add_watch(&inotify, event_file_name(event, inotify));
\end_layout

\begin_layout Standard

        else if (event->mask & (IN_DELETE | IN_MOVED_FROM)) // rimossa
\end_layout

\begin_layout Standard

            (void) db;  // TODO
\end_layout

\begin_layout Standard

    }
\end_layout

\begin_layout Standard

    else {  // se è un file?
\end_layout

\begin_layout Standard

        if (event->mask & (IN_DELETE | IN_MOVED_FROM))
\end_layout

\begin_layout Standard

            del_local_file_from_db(db, event_file_name(event, inotify));
\end_layout

\begin_layout Standard

        else if (event->mask & (IN_CREATE | IN_MOVED_TO))
\end_layout

\begin_layout Standard

            add_local_file_in_db(db, event_file_name(event, inotify));
\end_layout

\begin_layout Standard

    }
\end_layout

\begin_layout Standard

    return 0;
\end_layout

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
TODO: LA FUNZIONE NON È COMPLETA!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Regole-inotify"

\end_inset

Regole da applicare per ogni evento supportato
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In figura 
\begin_inset LatexCommand vref
reference "fig:Regole-inotify"

\end_inset

, invece, è mostrata l'implementazione della logica da applicare in caso
 si verifichi un evento importante sui file monitorati.
\end_layout

\begin_layout Standard
Di particolare interesse saranno
\end_layout

\begin_layout Itemize
L'aggiunta e la rimozione di directory
\end_layout

\begin_deeper
\begin_layout Itemize
Andrannno a modificare il 
\emph on
pool
\emph default
 di directories monitorate tramite inotify
\end_layout

\end_deeper
\begin_layout Itemize
L'aggiunta di file
\end_layout

\begin_deeper
\begin_layout Itemize
I nuovi file dovranno essere analizzati e le informazioni aggiunte al database
\end_layout

\end_deeper
\begin_layout Itemize
La rimozione di file
\end_layout

\begin_deeper
\begin_layout Itemize
Dovranno essere rimosse le informazioni dei file dal database
\end_layout

\end_deeper
\begin_layout Itemize
La modifica di file
\end_layout

\begin_deeper
\begin_layout Itemize
Dovranno essere aggiornate le informazioni dei file nel database
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
TODO: Rivedere e finire!
\end_layout

\end_inset


\end_layout

\begin_layout Part
\begin_inset LatexCommand label
name "par:Generalizzazione-della-configurabilità"

\end_inset

Generalizzazione della configurabilità a file qualsiasi
\end_layout

\begin_layout Chapter
File system per l'interrogazione di un database
\end_layout

\begin_layout Quote
Enrico Colombini, Marco Di Francesco/(2007) No album/00 - La ballata del
 programmatore.mp3
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
La fase finale del progetto è consistita nella realizzazione dei tre sottoproget
ti: un demone che monitorasse la sorgente dei dati, una libreria che offrisse
 i dati sotto forma di file system ed un client che usasse ed espandesse
 questa libreria.
\end_layout

\begin_layout Standard
Questi ultimi due elementi del progetto, inizialmente, erano una sola cosa,
 ma si è pensato di estrapolare la libreria per facilitare lo sviluppo di
 altre applicazioni simili a questa.
\end_layout

\begin_layout Standard
In particolare è da notare come i programmi e la libreria sviluppati siano
 software libero
\begin_inset Foot
status collapsed

\begin_layout Standard
musicmeshfsd e musicmeshfsc sono licenziati tramite la GNU General Public
 License, versione 3 e successive
\end_layout

\begin_layout Standard
db_fuse è licenziata tramite la GNU Lesser General Public License, versione
 3 e successive
\end_layout

\end_inset

.
 Entrambi sono disponibili all'indirizzo 
\begin_inset LatexCommand htmlurl
name "MusicMeshFS home page"
target "http://code.google.com/p/musicmeshfs/"

\end_inset

.
\end_layout

\begin_layout Standard
Veniamo adesso ad una breve descrizione della libreria sviluppata.
\end_layout

\begin_layout Section
La libreria 
\family typewriter
db_fuse
\end_layout

\begin_layout Standard
Per una pulizia del codice, ed un riutilizzo dello stesso in altri progetti,
 la musicmeshfsc è stato suddiviso logicamente in una parte 
\begin_inset Quotes eld
\end_inset

indipendente dal contenuto del database
\begin_inset Quotes erd
\end_inset

, ed un'altra 
\begin_inset Quotes eld
\end_inset

dipendente dal contenuto del database
\begin_inset Quotes erd
\end_inset

.
 La prima si occuperà, dato un generico database ed un generico schema di
 presentazione delle directory, di generare la gerarchia del file system.
 La seconda, invece, sarà necessaria nelle operazioni di inserimento, aggiorname
nto o rimozione delle singole tuple nelle varie tabelle del database
\begin_inset Foot
status collapsed

\begin_layout Standard
Volendo esagerare, è stata realizzata, a livello concettuale, l'equivalente
 di una classe astratta (indipendente dal contenuto del database) con solo
 alcuni metodi effettivamente realizzati, e di una classe derivata (dipendente
 dal contenuto del database) con l'implementazione dei metodi restanti.
\end_layout

\end_inset

.
\begin_inset Note Greyedout
status open

\begin_layout Standard
Per semplicità d'implementazione e motivi d'efficienza si è deciso di non
 permettere la creazione del file system partendo da un intero database,
 ma solo da una tabella (o vista, poiché l'accesso da parte della libreria
 sarà in sola lettura); per questo motivo, la libreria è stata chiamata
 table_view_fuse.
 Per semplificare il porting tra un'applicazione e l'altra, inoltre, è stato
 utilizzato il modulo constants ove lo sviluppatore dovrà impostare i propri
 valori d'interesse (nome della tabella da utilizzare, nome delle colonne,
 keyword corrispondente nell'interfaccia utente).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In effetti è stata implementata una gestione, al momento abbastanza rudimentale,
 dei joins per l'estrazione di informazioni da più tabelle contemporaneamente.
 Allo sviluppatore, tuttavia, è dato carico di impostare i valori di alcune
 costanti che verranno usate; in particolare saranno da definire
\end_layout

\begin_layout Itemize
i nomi delle tabelle del database che verranno utilizzate
\end_layout

\begin_layout Itemize
le keyword che l'utente potrà usare nello schema per definire come organizzare
 il suo filesystem
\end_layout

\begin_layout Itemize
i nomi delle rispettive colonne nel database
\end_layout

\begin_layout Itemize
le coppie tabelle che possono essere messe in JOIN
\end_layout

\begin_layout Itemize
i vincoli da usare nella condizione WHERE per ogni JOIN (ad esempio, se
 la tabella T1 ha una chiave esterna verso la tabella T2, in caso servano
 informazioni da entrambe le tabele, sarà necessario impostare 
\begin_inset Quotes eld
\end_inset

T1.chiave_esterna == T2.valore_referenziato
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Standard
In questo modo sarà possibile, per la libreria, eseguire le query appropriate
 per il ritrovamento delle informazioni.
\end_layout

\begin_layout Standard
La libreria, al momento, è in stato di 
\begin_inset Quotes eld
\end_inset

pre-alpha
\begin_inset Quotes erd
\end_inset

: i limiti sono parecchi, e non si può assicurare la compatibilità nè la
 stabilità dell'interfaccia.
\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
TODO: Rivedere e finire!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
ANCORA SULLO SCHEMA
\end_layout

\begin_layout Standard
ESEMPIO EMAIL
\end_layout

\begin_layout Standard
QUERY
\end_layout

\begin_layout Standard
TABELLA
\end_layout

\begin_layout Standard
DELLO SCHEMA NE PARLO QUI, DELLE QUERY PURE
\end_layout

\begin_layout Standard
Un particolare degno di nota è la presenza nella libreria db_fuse anche
 dei parser necessari a realizzare filesystem configurabili tramite schemi.
 In questo modo ogni programma che userà questa libreria avrà, tra le altre
 cose, la configurabilità dei nomi dei file tramite uno schema.
\end_layout

\begin_layout Section
Linguaggio di configurazione
\end_layout

\begin_layout Standard
CONFRONTO CON FUSEPOD
\end_layout

\begin_layout Standard
Una componente di rilievo del progetto è data dalla flessibilità con la
 quale le informazioni vengono offerte all'utente.
 Esistono già parecchi progetti nati con l'obiettivo di indicizzare collezioni
 musicali
\begin_inset Foot
status collapsed

\begin_layout Standard
Al momento (marzo 2008) su 
\begin_inset LatexCommand htmlurl
name "Media File Systems"
target "http://fuse.sourceforge.net/wiki/index.php/MediaFileSystems"

\end_inset

 sono elencati 24 progetti, anche se solo Offline Media Content Database,
 FUSEPod, TagsFs, fusedaap e pytagsfs sono confrontabili, anche solo in
 parte, con musicmeshfsd
\end_layout

\end_inset

, o mostrare viste su database tramite directories
\begin_inset Foot
status collapsed

\begin_layout Standard
Al momento (marzo 2008) su 
\begin_inset LatexCommand htmlurl
name "Database File Systems"
target "http://fuse.sourceforge.net/wiki/index.php/DatabaseFileSystems"

\end_inset

 sono elencati 11 progetti
\end_layout

\end_inset

, ma nessuno offriva, senza dovfs a db a fser esplicitamente effettuare
 delle query in un linguaggio SQL-like, la possibilità, per l'utente, di
 definire come ottenere i propri dati.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename imgs/SchemaLinguaggio.eps
	width 75col%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Descrizione-di-come"

\end_inset

Descrizione di come verrà analizzato lo schema
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In effetti lo schema necessario a musicmeshfsc offre la possibilità di indurre
 una relazione d'ordine tra i file sorgente: concettuale sui livelli del
 tree del file system, lessicografica tra i nodi fratelli.
\end_layout

\begin_layout Standard
Prendiamo, ad esempio, la figura 
\begin_inset LatexCommand vref
reference "fig:Descrizione-di-come"

\end_inset

: nella parte superiore si può vedere lo schema immesso dall'utente; nella
 parte centrale vediamo l'albero indotto: la radice, ovviamente, è '
\family typewriter
/
\family default
' (preceduto, implicitamente, dal mount-point del file system).
 Lo schema stesso può essere diviso in livelli, ognuno separato, non a caso,
 dal carattere di separatore di directory ('
\family typewriter
/
\family default
').
 Quindi 
\begin_inset Quotes eld
\end_inset


\family typewriter
%artist/%title.%type
\family default

\begin_inset Quotes erd
\end_inset

 è da dividere da una parte in 
\begin_inset Quotes eld
\end_inset


\family typewriter
%artist
\family default

\begin_inset Quotes erd
\end_inset

, dall'altra in 
\begin_inset Quotes eld
\end_inset


\family typewriter
%title.%type
\family default

\begin_inset Quotes erd
\end_inset

.
 In questo caso, abbastanza banale, vediamo che l'intero livello si riduce
 ad una sola keyword: 
\begin_inset Quotes eld
\end_inset


\family typewriter
%artist
\family default

\begin_inset Quotes erd
\end_inset

, quindi, implicitamente, l'utente sta dicendo che, come primo livello vuole
 solamente il nome degli artisti presenti nel database
\begin_inset Foot
status collapsed

\begin_layout Standard
In effetti il sistema è in grado di lavorare perfettamente in presenza,
 per ogni livello, sia di un numero indefinito di keywords che di elementi
 fissi.
 Ad esempio, è uno schema valido anche 
\begin_inset Quotes eld
\end_inset


\family typewriter
%type -> %year/%genre_%artist/%%%title (%album).%type
\family default

\begin_inset Quotes erd
\end_inset

 (anche se, in effetti, poco utile e poco leggibile)
\end_layout

\end_inset

.
 In effetti, nel sistema, al momento di ritornare i nomi dei file presenti
 in '
\family typewriter
/
\family default
', effettuerà una query del tipo 
\begin_inset Quotes eld
\end_inset


\family typewriter
SELECT artista FROM tabella
\family default
;
\begin_inset Quotes erd
\end_inset

, dove 
\begin_inset Quotes eld
\end_inset


\family typewriter
artista
\family default

\begin_inset Quotes erd
\end_inset

 dipende da 
\begin_inset Quotes eld
\end_inset

%artist
\begin_inset Quotes erd
\end_inset

, e 
\begin_inset Quotes eld
\end_inset


\family typewriter
tabella
\family default

\begin_inset Quotes erd
\end_inset

 è stata definita dal programmatore come nome della tabella da utilizzare.
\end_layout

\begin_layout Standard
I sottolivelli dell'albero vengono calcolati in modo simile, con l'aggiunta
 di una clausola 
\begin_inset Quotes eld
\end_inset

WHERE (colonna1 = valore1) AND (colonna2 = valore2)...
\begin_inset Quotes erd
\end_inset

 via via più complicata a seconda di quanto in profondità si scende nell'albero.
 In effetti ogni coppia 
\begin_inset Quotes eld
\end_inset

colonna
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

valore
\begin_inset Quotes erd
\end_inset

 corrisponde ai termini variabili ritrovati nella gerarchia fino a quel
 livello; quindi per ottenere l'elenco dei file presenti nella directory
 
\begin_inset Quotes eld
\end_inset

Francesco De Gregori
\begin_inset Quotes erd
\end_inset

 verrà effettuata una query del tipo 
\begin_inset Quotes eld
\end_inset


\family typewriter
SELECT titolo, tipo FROM tabella WHERE (artista = 'Francesco De Gregori');
\family default

\begin_inset Quotes erd
\end_inset

; titolo e tipo, ovviamente, dipendono dal fatto che, nello schema, il secondo
 livello utilizza due elementi dinamici (%title e %type).
\end_layout

\begin_layout Standard
L'aggiunta di un supporto trasparente alla condivisione dei file, è un plus.
\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
TODO: Rivedere e finire!
\end_layout

\end_inset


\end_layout

\begin_layout Section
Esempio d'uso per file musicali
\end_layout

\begin_layout Standard
confronto con fusepod
\end_layout

\begin_layout Chapter
Compilazione dei sorgenti
\end_layout

\begin_layout Quote
Daft punk/(2001) Discovery/04 - Harder, better, faster, stronger.mp3
\end_layout

\begin_layout Standard
\begin_inset Note Greyedout
status open

\begin_layout Standard
Mettere che è opensource
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il progetto è strutturato in maniera gerarchica
\end_layout

\begin_layout Standard
i sorgenti sono nella directory src
\end_layout

\begin_layout Standard
la documentazione in doc
\end_layout

\begin_layout Standard
la reference in doxy
\end_layout

\begin_layout Standard
in bin i programmi compilati
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Schema d'inclusione
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Makefile generati
\end_layout

\begin_layout Standard
Per la compilazione si è usati gnu make, per il quale sono stati scritti
 dei Makefile ad hoc.
 Il più rilevante, dal punto di vista del progetto, è quello, descritto
 in figura 
\begin_inset LatexCommand vref
reference "fig:src/Makefile"

\end_inset

, presente in src.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,extendedchars=true,language={[gnu]make},numbers=left,numberstyle={\tiny},showstringspaces=false,stepnumber=1"
inline false
status open

\begin_layout Standard

LIBRERIE = taglib sqlite3 fuse
\end_layout

\begin_layout Standard

CFLAGS = -std=c99 -pedantic -Wall -W -g `pkg-config --cflags $(LIBRERIE)`
 -D_XOPEN_SOURCE=500
\end_layout

\begin_layout Standard

LDFLAGS = `pkg-config --libs $(LIBRERIE)` -ltag_c
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

.PHONY : clean
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

all: musicmeshfsd musicmeshfsc
\end_layout

\begin_layout Standard

musicmeshfsd: musicmeshfsd.h utils.o commons.o inotify.o sqlite.o constants.o
\end_layout

\begin_layout Standard

        $(CC) $(CFLAGS) $(@:=.c) $? $(LDFLAGS) -o ../bin/$@
\end_layout

\begin_layout Standard

musicmeshfsc: musicmeshfsc.h utils.o sqlite.o db_fuse.o constants.o
\end_layout

\begin_layout Standard

        $(CC) $(CFLAGS) $(@:=.c) $? $(LDFLAGS) -o ../bin/$@
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

sqlite.c:       sqlite.pre_c schema.sql
\end_layout

\begin_layout Standard

        ../sostituisci.py sqlite.pre_c sqlite.c schema.sql
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

clean:
\end_layout

\begin_layout Standard

        rm -rf *.o *~ sqlite.c
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:src/Makefile"

\end_inset

src/Makefile
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Estensione del fs in ambiente distribuito
\end_layout

\begin_layout Quote
Frankie Hi-NRG Mc/(2008) dePrimoMaggio/00 - Rivoluzione feat_ Roy Paci.mp3
\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
DA FARE DA FARE DA FARE!!!
\end_layout

\end_inset


\end_layout

\begin_layout Quote

\end_layout

\begin_layout Standard
Spiegare perchè musicMESHfs
\end_layout

\begin_layout Section
Dispositivi embedded
\end_layout

\begin_layout Standard
Gli ambienti embedded sono sempre più presenti nella vita di tutti i giorni.
 La miniaturizzazione delle componenti hardware ha portato alla possibilità
 d'avere, a costi accessibili per chiunque, potenti strumenti di calcolo
 al polso o in tasca, sottoforma di palmari, telefoni cellulari e, in generale,
 
\begin_inset Quotes eld
\end_inset

wearable computers
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
In genere, tuttavia, tutta questa potenza non è affatto sfruttata appieno
 dall'utente finale, in quanto le compagnie hardware tendono a rendere questi
 computer il più semplici possibili da utilizzare, anche a spese della duttilità
 dello strumento stesso.
\end_layout

\begin_layout Standard
In questa ottica si pongono i sistemi operativi liberi, in particolare linux
\begin_inset Foot
status collapsed

\begin_layout Standard
In generale 
\emph on
linux
\emph default
 non individua un sistema operativo, ma solo il kernel.
 Tuttavia in questo documento, ove non sia causa di confusione, si userà
 indifferentemente lo stesso termine per entrambi i significati.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
La potenza di questi dispositivi, infatti, è tale da permettere di installare
 ed utilizzare un vero sistema operativo, e la scelta di linux permette
 di avere anche un sistema operativo 
\begin_inset Quotes eld
\end_inset

desktop
\begin_inset Quotes erd
\end_inset

, capace di adattarsi alle diverse esigenze dell'utilizzatore.
 Questo perchè linux consente di avere un sistema operativo POSIX-compliant,
 astrazione necessaria per utilizzare i programmi general-purpose su palmare.
\end_layout

\begin_layout Standard
Ovviamente non sarà possibile sperare d'utilizzare qualunque programma disponibi
le su questi dispositivi: le capacità hardware (dalla potenza della CPU
 e disponibilità di RAM fino alle dimensioni e capacità dei dispositivi
 di input-output) non sono state pensate per la potenza, ma per la lunga
 durata, e i costi e le dimensioni contenuti.
\end_layout

\begin_layout Standard
Da qui nasce l'esperienza MVux, distribuzione linux nata nei laboratori
 del dipartimento d'informatica, pensata per offrire il massimo della duttilità
 di linux ottimizzata per le risorse di uno smart phone.
\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
TODO: Rivedere e finire!
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Caratteristiche peculiari
\end_layout

\begin_layout Standard
Come si può vedere in 
\begin_inset LatexCommand citep
key "francesco_pistillo_tesi"

\end_inset

, è stato già effettuato il porting di MVux su smart phone.
 La seguente tesi, invece, si focalizzerà sullo sviluppo di un programma
 di utilità, svolto a semplificare alcune delle funzioni classiche di questi
 dispositivi, oltre che ad aggiungerne altre non previste dagli sviluppatori
 hardware.
\end_layout

\begin_layout Standard
In particolare, si utilizzeranno alcune librerie ed API peculiari di linux
 per sviluppare un programma di organizzazione e condivisione di file multimedia
li, con un occhio particale per la musica.
\end_layout

\begin_layout Standard
Nello specifico, il compito di questo software sarà quello di analizzare
 e monitorare un insieme di directory 
\begin_inset Quotes eld
\end_inset

sorgente
\begin_inset Quotes erd
\end_inset

, estrarre da queste i file multimediali supportati con i relativi metadati,
 ed esporle, tramite file system virtuale, sotto forma di una nuova directory
 
\begin_inset Quotes eld
\end_inset

destinazione
\begin_inset Quotes erd
\end_inset

 ordinata secondo i gusti dell'utente.
\end_layout

\begin_layout Standard
Una possibile estensione, inoltre, riguarda la possibilità di condividere
 la musica: appoggiandosi agli stack di rete offerti, in presenza di più
 dispositivi raggiungibili tra di loro, su cui il programma sarà in esecuzione,
 verrà a crearsi una rete peer-to-peer, in modo d'avere, sempre nella directory
 
\begin_inset Quotes eld
\end_inset

destinazione
\begin_inset Quotes erd
\end_inset

, e sempre con lo stesso ordinamento impostato dall'utente, anche i file
 degli altri dispositivi, in maniera del tutto trasparente.
\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
TODO: Rivedere e finire!
\end_layout

\end_inset


\end_layout

\begin_layout Section
Porting dell'applicazione su smart phone e testing
\end_layout

\begin_layout Subsection
Installazione del sistema base
\end_layout

\begin_layout Standard
Per una guida dettagliata e precisa si consiglia lo studi di 
\begin_inset LatexCommand citep
key "francesco_pistillo_tesi"

\end_inset

.
\end_layout

\begin_layout Subsection
Installazione librerie aggiuntive
\end_layout

\begin_layout Itemize
Installa sqlite3 (devel, se si vuole compilare sul cellulare)
\end_layout

\begin_layout Itemize
Installa taglib (devel, se si vuole compilare sul cellulare)
\end_layout

\begin_layout Itemize
Installa python (se si vuole compilare sul cellulare)
\end_layout

\begin_layout Subsection
Installazione programma
\end_layout

\begin_layout Standard
Dovrebbe bastare
\end_layout

\begin_layout LyX-Code
make
\end_layout

\begin_layout Subsection
Test programma
\end_layout

\begin_layout Standard
Sarà necessario prima di tutto avere della musica da monitorare :)
\end_layout

\begin_layout Standard
Quindi basterà lanciare `musicmeshfsd`
\end_layout

\begin_layout LyX-Code
$ musicmeshfsd collection.db musica_sparsa &
\end_layout

\begin_layout Standard
e poi `musicmeshfsc`
\end_layout

\begin_layout LyX-Code
$ musicmeshfsc collection.db musica_organizzata 
\backslash

\end_layout

\begin_layout LyX-Code
    '%genre/%artist - %year/%title.%type' &
\end_layout

\begin_layout Standard
d'ora in poi, in `musica_organizzata` sarà presente il fs virtuale.
\end_layout

\begin_layout LyX-Code
$ tree musica_sparsa
\end_layout

\begin_layout LyX-Code
file.mp3
\end_layout

\begin_layout LyX-Code
altro_file.mp3
\end_layout

\begin_layout LyX-Code
...
\end_layout

\begin_layout LyX-Code
$ tree musica_organizzata
\end_layout

\begin_layout LyX-Code
musica_organizzata
\end_layout

\begin_layout LyX-Code
|-- Blues
\end_layout

\begin_layout LyX-Code
|   |-- artista - 1999
\end_layout

\begin_layout LyX-Code
|   |   |-- canzone.mp3
\end_layout

\begin_layout LyX-Code
....
\end_layout

\begin_layout Standard
Per provare la sincronizzazione via rete, sarà sufficiente avere a disposizione
 due postazioni in una lan.
 La simulazione verrà meglio descritta nel capitolo 
\begin_inset LatexCommand vref
reference "cha:Simulazione-dello-scambio"

\end_inset

.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand label
name "cha:Simulazione-dello-scambio"

\end_inset

Simulazione dello scambio di file tra 2 smart phone
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename imgs/Rete.eps
	width 50col%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "fig:Rappresentazione-della-rete"

\end_inset

Rappresentazione della rete formata da musicmeshfsd
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Concettualmente musicmeshfsd doveva lavorare anche in rete; un'idea del
 funzionamento è in figura 
\begin_inset LatexCommand vref
reference "fig:Rappresentazione-della-rete"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
TODO: mettere grafico musicmeshfsd
\end_layout

\end_inset


\end_layout

\begin_layout Part
\start_of_appendix
Appendici
\end_layout

\begin_layout Chapter
Ringraziamenti
\end_layout

\begin_layout Quote
Paolo Conte/(1996) The best of/11 - Max.mp3
\end_layout

\begin_layout Standard
Un doveroso ringraziamento va al prof.
 Caporaso per la comprensione e la competenza mostrate, e poi a tutto il
 laboratorio dell'hixos per l'aiuto e la simpatia che mi hanno dato.
 In particolare il Vittoria e Nicola per tutti i consigli e le chiacchiere
 fatte insieme, a Michele, a Gianluca e a Eustrat, e poi a Roberto per i
 caffé offerti e a tutti gli altri per avermi sopportato :)
\end_layout

\begin_layout Standard
Grazie al signor Zuccaro per avermi fatto laureare ad Aprile :D
\end_layout

\begin_layout Standard
Ringrazio i miei genitori, per aver continuato a crederci fino ad ora, ad
 avere un figlio intellettuale (e ora chi lo va a dire a mia madre che ho
 sempre finto?), tutti i parenti per i continui 
\begin_inset Quotes eld
\end_inset

ma quando ti laurei?
\begin_inset Quotes erd
\end_inset

 e soprattutto mio padre per i vari 
\begin_inset Quotes eld
\end_inset

ma lo sai che c'è questo amico mio che ha un figlio della tua età che è
 già un gran lavoratore...
\begin_inset Quotes erd
\end_inset

.
 Ora non ho più scuse!
\end_layout

\begin_layout Standard
Ringrazio tutti i miei amici e le mie amiche, presenti e passati, che mi
 sono stati vicini, con cui ho litigato, e che, a volte, ho perso.
 Senza di loro non sarei quel che sono ora.
\newline
Grazie Franco, Simone, Marianto,
 Vito, Michela, Mariangela, Simona, Lucia, Antonio, Tizianona, Giovanni,
 Stefania, Lara, Tiziana, Pietro, (
\emph on
respira
\emph default
), e ancora Massimo, Giovanni, Daniele, Francesca, Giovanni, Imma, Angelo,
 Giuseppe...
\newline
...grazie anche a tutti quelli che non ricordo per la mia maledetta
 memoria da pesce rosso, io non so chi siete, ma voi sì...
\end_layout

\begin_layout Standard
Ringrazio tutti quelli che non ho mai avuto il coraggio di ringraziare per
 tutte le cose che, consciamente o meno, mi han dato.
\end_layout

\begin_layout Standard
Grazie ai signori Torvalds, Stallman, K&R, Knuth, e tutti gli altri semidei
 che han reso possibile tutto questo.
\end_layout

\begin_layout Standard
Grazie ad Enrico Colombini per il testo, a Fabrizio De André per la musica,
 e a Marco Di Francesco per la voce.
\end_layout

\begin_layout Standard
Grazie al Fraunhofer IIS-A per aver portato la musica nella casa di tutti,
 e alla Xiph.Org Foundation per avercela riportata di nuovo :D
\end_layout

\begin_layout Standard
Grazie a me, per aver sopportato tutto questo e per insistere ancora.
\end_layout

\begin_layout Standard
Grazie a te, o lettore
\begin_inset Foot
status collapsed

\begin_layout Standard
Scusatemi tutti, sono stanco, è tardi, e dovrò ancora continuare...
 almeno fatemi fare un po' di metatesto!
\end_layout

\end_inset

, che ti cerchi nei ringraziamenti per sapere se ti cito.
\end_layout

\begin_layout Standard
E infine grazie alla mia ragazza: questo testo, e tutto il tempo che non
 siamo riusciti a passare con assieme per colpa di tutti gli eventi più
 grandi di me, sono dedicati a lei.
\end_layout

\begin_layout Chapter
\begin_inset LatexCommand label
name "cha:Reference-genarata-da"

\end_inset

Reference generata da doxygen
\end_layout

\begin_layout Quote
Fabrizio De André/(1970) La buona novella/09 - Il testamento di Tito.mp3
\end_layout

\begin_layout Standard
\begin_inset Note Shaded
status open

\begin_layout Standard
Da cancellare?
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Licenza per la documentazione libera GNU
\end_layout

\begin_layout Quote
Ty Semaka, Theo de Raadt/(2007) OpenBSD 4.2/01 - 100001 1010101.ogg
\end_layout

\begin_layout Section
\paragraph_spacing single
\noindent

\lang english
\begin_inset LatexCommand label
name "sec:GNU-Free-Documentation"

\end_inset

GNU Free Documentation License
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
Version 1.2, November 2002
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
Copyright © 2000,2001,2002 Free Software Foundation, Inc.
\end_layout

\begin_layout Address
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
Everyone is permitted to copy and distribute verbatim copies of this license
 document, but changing it is not allowed.
 
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size footnotesize
\lang english
Preamble
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
The purpose of this License is to make a manual, textbook, or other functional
 and useful document 
\begin_inset Quotes eld
\end_inset

free
\begin_inset Quotes erd
\end_inset

 in the sense of freedom: to assure everyone the effective freedom to copy
 and redistribute it, with or without modifying it, either commercially
 or noncommercially.
 Secondarily, this License preserves for the author and publisher a way
 to get credit for their work, while not being considered responsible for
 modifications made by others.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
This License is a kind of 
\begin_inset Quotes eld
\end_inset

copyleft
\begin_inset Quotes erd
\end_inset

, which means that derivative works of the document must themselves be free
 in the same sense.
 It complements the GNU General Public License, which is a copyleft license
 designed for free software.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
We have designed this License in order to use it for manuals for free software,
 because free software needs free documentation: a free program should come
 with manuals providing the same freedoms that the software does.
 But this License is not limited to software manuals; it can be used for
 any textual work, regardless of subject matter or whether it is published
 as a printed book.
 We recommend this License principally for works whose purpose is instruction
 or reference.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
1.
 APPLICABILITY AND DEFINITIONS
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
This License applies to any manual or other work, in any medium, that contains
 a notice placed by the copyright holder saying it can be distributed under
 the terms of this License.
 Such a notice grants a world-wide, royalty-free license, unlimited in duration,
 to use that work under the conditions stated herein.
 The 
\begin_inset Quotes eld
\end_inset


\series bold
Document
\series default

\begin_inset Quotes erd
\end_inset

, below, refers to any such manual or work.
 Any member of the public is a licensee, and is addressed as 
\begin_inset Quotes eld
\end_inset


\series bold
you
\series default

\begin_inset Quotes erd
\end_inset

.
 You accept the license if you copy, modify or distribute the work in a
 way requiring permission under copyright law.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
A 
\begin_inset Quotes eld
\end_inset


\series bold
Modified Version
\series default

\begin_inset Quotes erd
\end_inset

 of the Document means any work containing the Document or a portion of
 it, either copied verbatim, or with modifications and/or translated into
 another language.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
A 
\begin_inset Quotes eld
\end_inset


\series bold
Secondary Section
\series default

\begin_inset Quotes erd
\end_inset

 is a named appendix or a front-matter section of the Document that deals
 exclusively with the relationship of the publishers or authors of the Document
 to the Document's overall subject (or to related matters) and contains
 nothing that could fall directly within that overall subject.
 (Thus, if the Document is in part a textbook of mathematics, a Secondary
 Section may not explain any mathematics.) The relationship could be a matter
 of historical connection with the subject or with related matters, or of
 legal, commercial, philosophical, ethical or political position regarding
 them.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
The 
\begin_inset Quotes eld
\end_inset


\series bold
Invariant Sections
\series default

\begin_inset Quotes erd
\end_inset

 are certain Secondary Sections whose titles are designated, as being those
 of Invariant Sections, in the notice that says that the Document is released
 under this License.
 If a section does not fit the above definition of Secondary then it is
 not allowed to be designated as Invariant.
 The Document may contain zero Invariant Sections.
 If the Document does not identify any Invariant Sections then there are
 none.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
The 
\begin_inset Quotes eld
\end_inset


\series bold
Cover Texts
\series default

\begin_inset Quotes erd
\end_inset

 are certain short passages of text that are listed, as Front-Cover Texts
 or Back-Cover Texts, in the notice that says that the Document is released
 under this License.
 A Front-Cover Text may be at most 5 words, and a Back-Cover Text may be
 at most 25 words.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
A 
\begin_inset Quotes eld
\end_inset


\series bold
Transparent
\series default

\begin_inset Quotes erd
\end_inset

 copy of the Document means a machine-readable copy, represented in a format
 whose specification is available to the general public, that is suitable
 for revising the document straightforwardly with generic text editors or
 (for images composed of pixels) generic paint programs or (for drawings)
 some widely available drawing editor, and that is suitable for input to
 text formatters or for automatic translation to a variety of formats suitable
 for input to text formatters.
 A copy made in an otherwise Transparent file format whose markup, or absence
 of markup, has been arranged to thwart or discourage subsequent modification
 by readers is not Transparent.
 An image format is not Transparent if used for any substantial amount of
 text.
 A copy that is not 
\begin_inset Quotes eld
\end_inset

Transparent
\begin_inset Quotes erd
\end_inset

 is called 
\begin_inset Quotes eld
\end_inset


\series bold
Opaque
\series default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
Examples of suitable formats for Transparent copies include plain ASCII
 without markup, Texinfo input format, LaTeX input format, SGML or XML using
 a publicly available DTD, and standard-conforming simple HTML, PostScript
 or PDF designed for human modification.
 Examples of transparent image formats include PNG, XCF and JPG.
 Opaque formats include proprietary formats that can be read and edited
 only by proprietary word processors, SGML or XML for which the DTD and/or
 processing tools are not generally available, and the machine-generated
 HTML, PostScript or PDF produced by some word processors for output purposes
 only.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
The 
\begin_inset Quotes eld
\end_inset


\series bold
Title Page
\series default

\begin_inset Quotes erd
\end_inset

 means, for a printed book, the title page itself, plus such following pages
 as are needed to hold, legibly, the material this License requires to appear
 in the title page.
 For works in formats which do not have any title page as such, 
\begin_inset Quotes eld
\end_inset

Title Page
\begin_inset Quotes erd
\end_inset

 means the text near the most prominent appearance of the work's title,
 preceding the beginning of the body of the text.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
A section 
\begin_inset Quotes eld
\end_inset


\series bold
Entitled XYZ
\series default

\begin_inset Quotes erd
\end_inset

 means a named subunit of the Document whose title either is precisely XYZ
 or contains XYZ in parentheses following text that translates XYZ in another
 language.
 (Here XYZ stands for a specific section name mentioned below, such as 
\begin_inset Quotes eld
\end_inset


\series bold
Acknowledgements
\series default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\series bold
Dedications
\series default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\series bold
Endorsements
\series default

\begin_inset Quotes erd
\end_inset

, or 
\begin_inset Quotes eld
\end_inset


\series bold
History
\series default

\begin_inset Quotes erd
\end_inset

.) To 
\begin_inset Quotes eld
\end_inset


\series bold
Preserve the Title
\series default

\begin_inset Quotes erd
\end_inset

 of such a section when you modify the Document means that it remains a
 section 
\begin_inset Quotes eld
\end_inset

Entitled XYZ
\begin_inset Quotes erd
\end_inset

 according to this definition.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
The Document may include Warranty Disclaimers next to the notice which states
 that this License applies to the Document.
 These Warranty Disclaimers are considered to be included by reference in
 this License, but only as regards disclaiming warranties: any other implication
 that these Warranty Disclaimers may have is void and has no effect on the
 meaning of this License.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
2.
 VERBATIM COPYING
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
You may copy and distribute the Document in any medium, either commercially
 or noncommercially, provided that this License, the copyright notices,
 and the license notice saying this License applies to the Document are
 reproduced in all copies, and that you add no other conditions whatsoever
 to those of this License.
 You may not use technical measures to obstruct or control the reading or
 further copying of the copies you make or distribute.
 However, you may accept compensation in exchange for copies.
 If you distribute a large enough number of copies you must also follow
 the conditions in section\InsetSpace ~
3.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
You may also lend copies, under the same conditions stated above, and you
 may publicly display copies.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
3.
 COPYING IN QUANTITY
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
If you publish printed copies (or copies in media that commonly have printed
 covers) of the Document, numbering more than 100, and the Document's license
 notice requires Cover Texts, you must enclose the copies in covers that
 carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on
 the front cover, and Back-Cover Texts on the back cover.
 Both covers must also clearly and legibly identify you as the publisher
 of these copies.
 The front cover must present the full title with all words of the title
 equally prominent and visible.
 You may add other material on the covers in addition.
 Copying with changes limited to the covers, as long as they preserve the
 title of the Document and satisfy these conditions, can be treated as verbatim
 copying in other respects.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
If the required texts for either cover are too voluminous to fit legibly,
 you should put the first ones listed (as many as fit reasonably) on the
 actual cover, and continue the rest onto adjacent pages.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
If you publish or distribute Opaque copies of the Document numbering more
 than 100, you must either include a machine-readable Transparent copy along
 with each Opaque copy, or state in or with each Opaque copy a computer-network
 location from which the general network-using public has access to download
 using public-standard network protocols a complete Transparent copy of
 the Document, free of added material.
 If you use the latter option, you must take reasonably prudent steps, when
 you begin distribution of Opaque copies in quantity, to ensure that this
 Transparent copy will remain thus accessible at the stated location until
 at least one year after the last time you distribute an Opaque copy (directly
 or through your agents or retailers) of that edition to the public.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
It is requested, but not required, that you contact the authors of the Document
 well before redistributing any large number of copies, to give them a chance
 to provide you with an updated version of the Document.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
4.
 MODIFICATIONS
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
You may copy and distribute a Modified Version of the Document under the
 conditions of sections 2 and 3 above, provided that you release the Modified
 Version under precisely this License, with the Modified Version filling
 the role of the Document, thus licensing distribution and modification
 of the Modified Version to whoever possesses a copy of it.
 In addition, you must do these things in the Modified Version:
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

A.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Use in the Title Page (and on the covers, if any) a title distinct from
 that of the Document, and from those of previous versions (which should,
 if there were any, be listed in the History section of the Document).
 You may use the same title as a previous version if the original publisher
 of that version gives permission.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

B.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 List on the Title Page, as authors, one or more persons or entities responsible
 for authorship of the modifications in the Modified Version, together with
 at least five of the principal authors of the Document (all of its principal
 authors, if it has fewer than five), unless they release you from this
 requirement.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

C.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 State on the Title page the name of the publisher of the Modified Version,
 as the publisher.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

D.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Preserve all the copyright notices of the Document.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

E.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Add an appropriate copyright notice for your modifications adjacent to
 the other copyright notices.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

F.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Include, immediately after the copyright notices, a license notice giving
 the public permission to use the Modified Version under the terms of this
 License, in the form shown in the Addendum below.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

G.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Preserve in that license notice the full lists of Invariant Sections and
 required Cover Texts given in the Document's license notice.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

H.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Include an unaltered copy of this License.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

I.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Preserve the section Entitled 
\begin_inset Quotes eld
\end_inset

History
\begin_inset Quotes erd
\end_inset

, Preserve its Title, and add to it an item stating at least the title,
 year, new authors, and publisher of the Modified Version as given on the
 Title Page.
 If there is no section Entitled 
\begin_inset Quotes eld
\end_inset

History
\begin_inset Quotes erd
\end_inset

 in the Document, create one stating the title, year, authors, and publisher
 of the Document as given on its Title Page, then add an item describing
 the Modified Version as stated in the previous sentence.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

J.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Preserve the network location, if any, given in the Document for public
 access to a Transparent copy of the Document, and likewise the network
 locations given in the Document for previous versions it was based on.
 These may be placed in the 
\begin_inset Quotes eld
\end_inset

History
\begin_inset Quotes erd
\end_inset

 section.
 You may omit a network location for a work that was published at least
 four years before the Document itself, or if the original publisher of
 the version it refers to gives permission.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

K.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 For any section Entitled 
\begin_inset Quotes eld
\end_inset

Acknowledgements
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

Dedications
\begin_inset Quotes erd
\end_inset

, Preserve the Title of the section, and preserve in the section all the
 substance and tone of each of the contributor acknowledgements and/or dedicatio
ns given therein.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

L.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Preserve all the Invariant Sections of the Document, unaltered in their
 text and in their titles.
 Section numbers or the equivalent are not considered part of the section
 titles.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

M.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Delete any section Entitled 
\begin_inset Quotes eld
\end_inset

Endorsements
\begin_inset Quotes erd
\end_inset

.
 Such a section may not be included in the Modified Version.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

N.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Do not retitle any existing section to be Entitled 
\begin_inset Quotes eld
\end_inset

Endorsements
\begin_inset Quotes erd
\end_inset

 or to conflict in title with any Invariant Section.
\end_layout

\begin_layout Itemize
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

O.
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Preserve any Warranty Disclaimers.
 
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
If the Modified Version includes new front-matter sections or appendices
 that qualify as Secondary Sections and contain no material copied from
 the Document, you may at your option designate some or all of these sections
 as invariant.
 To do this, add their titles to the list of Invariant Sections in the Modified
 Version's license notice.
 These titles must be distinct from any other section titles.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
You may add a section Entitled 
\begin_inset Quotes eld
\end_inset

Endorsements
\begin_inset Quotes erd
\end_inset

, provided it contains nothing but endorsements of your Modified Version
 by various parties--for example, statements of peer review or that the
 text has been approved by an organization as the authoritative definition
 of a standard.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
You may add a passage of up to five words as a Front-Cover Text, and a passage
 of up to 25 words as a Back-Cover Text, to the end of the list of Cover
 Texts in the Modified Version.
 Only one passage of Front-Cover Text and one of Back-Cover Text may be
 added by (or through arrangements made by) any one entity.
 If the Document already includes a cover text for the same cover, previously
 added by you or by arrangement made by the same entity you are acting on
 behalf of, you may not add another; but you may replace the old one, on
 explicit permission from the previous publisher that added the old one.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
The author(s) and publisher(s) of the Document do not by this License give
 permission to use their names for publicity for or to assert or imply endorseme
nt of any Modified Version.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
5.
 COMBINING DOCUMENTS
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
You may combine the Document with other documents released under this License,
 under the terms defined in section\InsetSpace ~
4 above for modified versions, provided
 that you include in the combination all of the Invariant Sections of all
 of the original documents, unmodified, and list them all as Invariant Sections
 of your combined work in its license notice, and that you preserve all
 their Warranty Disclaimers.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
The combined work need only contain one copy of this License, and multiple
 identical Invariant Sections may be replaced with a single copy.
 If there are multiple Invariant Sections with the same name but different
 contents, make the title of each such section unique by adding at the end
 of it, in parentheses, the name of the original author or publisher of
 that section if known, or else a unique number.
 Make the same adjustment to the section titles in the list of Invariant
 Sections in the license notice of the combined work.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
In the combination, you must combine any sections Entitled 
\begin_inset Quotes eld
\end_inset

History
\begin_inset Quotes erd
\end_inset

 in the various original documents, forming one section Entitled 
\begin_inset Quotes eld
\end_inset

History
\begin_inset Quotes erd
\end_inset

; likewise combine any sections Entitled 
\begin_inset Quotes eld
\end_inset

Acknowledgements
\begin_inset Quotes erd
\end_inset

, and any sections Entitled 
\begin_inset Quotes eld
\end_inset

Dedications
\begin_inset Quotes erd
\end_inset

.
 You must delete all sections Entitled 
\begin_inset Quotes eld
\end_inset

Endorsements
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
6.
 COLLECTIONS OF DOCUMENTS
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
You may make a collection consisting of the Document and other documents
 released under this License, and replace the individual copies of this
 License in the various documents with a single copy that is included in
 the collection, provided that you follow the rules of this License for
 verbatim copying of each of the documents in all other respects.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
You may extract a single document from such a collection, and distribute
 it individually under this License, provided you insert a copy of this
 License into the extracted document, and follow this License in all other
 respects regarding verbatim copying of that document.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
7.
 AGGREGATION WITH INDEPENDENT WORKS
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
A compilation of the Document or its derivatives with other separate and
 independent documents or works, in or on a volume of a storage or distribution
 medium, is called an 
\begin_inset Quotes eld
\end_inset

aggregate
\begin_inset Quotes erd
\end_inset

 if the copyright resulting from the compilation is not used to limit the
 legal rights of the compilation's users beyond what the individual works
 permit.
 When the Document is included in an aggregate, this License does not apply
 to the other works in the aggregate which are not themselves derivative
 works of the Document.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
If the Cover Text requirement of section\InsetSpace ~
3 is applicable to these copies
 of the Document, then if the Document is less than one half of the entire
 aggregate, the Document's Cover Texts may be placed on covers that bracket
 the Document within the aggregate, or the electronic equivalent of covers
 if the Document is in electronic form.
 Otherwise they must appear on printed covers that bracket the whole aggregate.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
8.
 TRANSLATION
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
Translation is considered a kind of modification, so you may distribute
 translations of the Document under the terms of section\InsetSpace ~
4.
 Replacing Invariant Sections with translations requires special permission
 from their copyright holders, but you may include translations of some
 or all Invariant Sections in addition to the original versions of these
 Invariant Sections.
 You may include a translation of this License, and all the license notices
 in the Document, and any Warranty Disclaimers, provided that you also include
 the original English version of this License and the original versions
 of those notices and disclaimers.
 In case of a disagreement between the translation and the original version
 of this License or a notice or disclaimer, the original version will prevail.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
If a section in the Document is Entitled 
\begin_inset Quotes eld
\end_inset

Acknowledgements
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Dedications
\begin_inset Quotes erd
\end_inset

, or 
\begin_inset Quotes eld
\end_inset

History
\begin_inset Quotes erd
\end_inset

, the requirement (section\InsetSpace ~
4) to Preserve its Title (section\InsetSpace ~
1) will typically
 require changing the actual title.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
9.
 TERMINATION
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
You may not copy, modify, sublicense, or distribute the Document except
 as expressly provided for under this License.
 Any other attempt to copy, modify, sublicense or distribute the Document
 is void, and will automatically terminate your rights under this License.
 However, parties who have received copies, or rights, from you under this
 License will not have their licenses terminated so long as such parties
 remain in full compliance.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
10.
 FUTURE REVISIONS OF THIS LICENSE
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
The Free Software Foundation may publish new, revised versions of the GNU
 Free Documentation License from time to time.
 Such new versions will be similar in spirit to the present version, but
 may differ in detail to address new problems or concerns.
 See http://www.gnu.org/copyleft/.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
Each version of the License is given a distinguishing version number.
 If the Document specifies that a particular numbered version of this License
 
\begin_inset Quotes eld
\end_inset

or any later version
\begin_inset Quotes erd
\end_inset

 applies to it, you have the option of following the terms and conditions
 either of that specified version or of any later version that has been
 published (not as a draft) by the Free Software Foundation.
 If the Document does not specify a version number of this License, you
 may choose any version ever published (not as a draft) by the Free Software
 Foundation.
\end_layout

\begin_layout Section*
\paragraph_spacing single
\noindent

\series bold
\size small
\lang english
ADDENDUM: How to use this License for your documents
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
To use this License in a document you have written, include a copy of the
 License in the document and put the following copyright and license notices
 just after the title page:
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Quote
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
Copyright © YEAR YOUR NAME.
 Permission is granted to copy, distribute and/or modify this document under
 the terms of the GNU Free Documentation License, Version 1.2 or any later
 version published by the Free Software Foundation; with no Invariant Sections,
 no Front-Cover Texts, and no Back-Cover Texts.
 A copy of the license is included in the section entitled 
\begin_inset Quotes eld
\end_inset

GNU Free Documentation License
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
 replace the 
\begin_inset Quotes eld
\end_inset

with 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
dots
\end_layout

\end_inset

\InsetSpace \space{}
Texts.
\begin_inset Quotes erd
\end_inset

 line with this:
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Quote
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
with the Invariant Sections being LIST THEIR TITLES, with the Front-Cover
 Texts being LIST, and with the Back-Cover Texts being LIST.
 
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
If you have Invariant Sections without Cover Texts, or some other combination
 of the three, merge those two alternatives to suit the situation.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\size footnotesize
\lang english
If your document contains nontrivial examples of program code, we recommend
 releasing these examples in parallel under your choice of free software
 license, such as the GNU General Public License, to permit their use in
 free software.
\end_layout

\begin_layout Standard
\begin_inset LatexCommand bibtex
options "alpha"
bibfiles "reference"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset LatexCommand printindex

\end_inset


\end_layout

\end_body
\end_document
